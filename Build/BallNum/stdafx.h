
// stdafx.h : 标准系统包含文件的包含文件，
// 或是经常使用但不常更改的
// 特定于项目的包含文件

#pragma once

#ifndef VC_EXTRALEAN
#define VC_EXTRALEAN            // 从 Windows 头中排除极少使用的资料
#endif

#include "targetver.h"

#define _ATL_CSTRING_EXPLICIT_CONSTRUCTORS      // 某些 CString 构造函数将是显式的

// 关闭 MFC 对某些常见但经常可放心忽略的警告消息的隐藏
#define _AFX_ALL_WARNINGS

#include <afxwin.h>         // MFC 核心组件和标准组件
#include <afxext.h>         // MFC 扩展


#include <afxdisp.h>        // MFC 自动化类



#ifndef _AFX_NO_OLE_SUPPORT
#include <afxdtctl.h>           // MFC 对 Internet Explorer 4 公共控件的支持
#endif
#ifndef _AFX_NO_AFXCMN_SUPPORT
#include <afxcmn.h>             // MFC 对 Windows 公共控件的支持
#endif // _AFX_NO_AFXCMN_SUPPORT

#include <afxcontrolbars.h>     // 功能区和控件条的 MFC 支持

#define SQLITE_OUTSIDE
#include "basedefine.h"



// struct GroupBallNum
// {
// 	uint32 id;
// 	uint8 number[7];
// 
// 	GroupBallNum() 
// 	{
// 		Reset();
// 	}
// 	void Reset()
// 	{
// 		id = 0;
// 		memset(number, 0, sizeof(number));
// 	}
// 	bool Parsing(const char* szText)
// 	{
// 		int result = sscanf_s(szText, "%d:%d,%d,%d,%d,%d,%d,%d", &id,&number[0], &number[1], &number[2], &number[3], &number[4], &number[5], &number[6]);
// 		if (result != BALL_COUNT)
// 		{
// 			Reset();
// 			return false;
// 		}
// 		else
// 			return  true;
// 	}
// 	bool Parsing(const wchar_t* szText)
// 	{
// 		int result = swscanf_s(szText, _T("%d:%d,%d,%d,%d,%d,%d,%d"), &id, &number[0], &number[1], &number[2], &number[3], &number[4], &number[5], &number[6]);
// 		if (result != BALL_COUNT)
// 		{
// 			Reset();
// 			return false;
// 		}
// 		else
// 			return  result != BALL_COUNT;
// 	}
// 	CString toCString()
// 	{
// 		CString res;
// 		res.Format(_T("%d:%d,%d,%d,%d,%d,%d,%d"), id, number[0], number[1], number[2], number[3], number[4], number[5], number[6]);
// 		return res;
// 	}
// };





#ifdef _UNICODE
#if defined _M_IX86
#pragma comment(linker,"/manifestdependency:\"type='win32' name='Microsoft.Windows.Common-Controls' version='6.0.0.0' processorArchitecture='x86' publicKeyToken='6595b64144ccf1df' language='*'\"")
#elif defined _M_X64
#pragma comment(linker,"/manifestdependency:\"type='win32' name='Microsoft.Windows.Common-Controls' version='6.0.0.0' processorArchitecture='amd64' publicKeyToken='6595b64144ccf1df' language='*'\"")
#else
#pragma comment(linker,"/manifestdependency:\"type='win32' name='Microsoft.Windows.Common-Controls' version='6.0.0.0' processorArchitecture='*' publicKeyToken='6595b64144ccf1df' language='*'\"")
#endif
#endif


